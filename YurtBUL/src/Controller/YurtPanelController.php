<?php



namespace App\Controller;
use App\Entity\Admin\Yurt;

use App\Repository\Admin\CategoryRepository;
use App\Repository\SehirRepository;
use App\Repository\IlceRepository;
use Symfony\Component\HttpFoundation\Request;
use App\Entity\User;
use App\Repository\Admin\YurtRepository;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\HttpFoundation\Response;
use App\Form\Admin\YurtType;
use App\Repository\Admin\YurtSahibiRepository;

class YurtPanelController extends AbstractController
{


    /**
     * @Route("/yurtpanel", name="yurtpanel", methods="GET")
     */
    public function index(IlceRepository $ilceRepository,YurtRepository $yurtRepository,CategoryRepository $categoryRepository,SehirRepository $sehirRepository): Response
    {
        $yurt=$yurtRepository->findAll();
        $cat=$categoryRepository->findAll();
        $sehir=$sehirRepository->findAll();
        $ilce=$ilceRepository->findAll();
        $usersession=$this->getUser();
        $user = $this->getDoctrine()->getRepository(User::class)->find($usersession->getId());
        $dene=$yurtRepository->findBy(['userid' => $user->getid()]);
        return $this->render('yurt_panel/index.html.twig', ['dene' => $dene,'ilce'=>$ilce, 'cat'=>$cat,'sehir'=>$sehir, 'yurt'=>$yurt]);
    }
    /**

     * @Route("/yurtpaneledit/{id}", name="yurtpaneledit", methods="GET|POST")
     */
    public function yurtpaneledit(IlceRepository $ilceRepository,YurtRepository $yurtRepository,CategoryRepository $categoryRepository,SehirRepository $sehirRepository)
    {
        $yurt=$yurtRepository->findAll();
        $cat=$categoryRepository->findAll();
        $usersession=$this->getUser();
        $user = $this->getDoctrine()->getRepository(User::class)->find($usersession->getId());
        $dene=$yurtRepository->findBy(['userid' => $user->getid()]);
        $sehir=$sehirRepository->findAll();
        $ilce=$ilceRepository->findAll();
        return $this->render('yurt_panel/ilanlarimshow.html.twig', ['yurt' => $yurt,'user'=>$user,'ilce'=>$ilce, 'cat'=>$cat,'sehir'=>$sehir,'dene'=> $dene]);
    }
    /**
     * @Route("/{id}", name="yurt_delete", methods="DELETE")
     */
    public function yurtdelete(Request $request, Yurt $yurt): Response
    {
        if ($this->isCsrfTokenValid('delete'.$yurt->getId(), $request->request->get('_token'))) {
            $em = $this->getDoctrine()->getManager();
            $em->remove($yurt);
            $em->flush();
        }

        return $this->redirectToRoute('yurtpanel');
    }

    /**
     * @Route("/{id}/yurtiedit", name="yurtiedit", methods="GET|POST")
     */
    public function yurtiedit(Request $request, $id, Yurt $yurt): Response
    {

        $form = $this->createForm(YurtType::class, $yurt);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            $this->getDoctrine()->getManager()->flush();

            return $this->redirectToRoute('yurtpanel', ['id' => $yurt->getId()]);
        }

        return $this->render('yurt_panel/image_edit.html.twig', [
            'yurt' => $yurt,
            'id' => $id,
            'form' => $form->createView(),
        ]);
    }
    /**
     * @Route("/{id}/yurtiupdate", name="yurtiupdate", methods="GET|POST")
     */
    public function yurtiupdate(Request $request, $id, Yurt $yurt): Response
    {
        $form = $this->createForm(YurtType::class, $yurt);
        $form->handleRequest($request);

        if($request->files->get('imname')){
            $file = $request->files->get('imname');

            $fileName = $this->generateUniqueFileName() . '.' . $file->guessExtension();
            // Move the file to the directory where brochures are stored
            try {
                $file->move(
                    $this->getParameter('images_directory'),//servis.yaml deki
                    $fileName
                );
            } catch (FileException $e) {
                // ... handle exception if something happens during file upload
            }
            $yurt->setImage($fileName);
            $this->getDoctrine()->getManager()->flush();
            return $this->redirectToRoute('yurtiedit', ['id' => $yurt->getId()]);
        }

    }
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }
}
